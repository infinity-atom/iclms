name: Continuous Build

on:
  push:
    paths:
      - 'iclms-ui/**'
      - 'iclms-electron/**'
  pull_request:
    paths:
      - 'iclms-ui/**'
      - 'iclms-electron/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'yarn'

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install and build iclms-ui
      working-directory: iclms-ui
      run: |
        yarn install
        yarn build

    - name: Copy iclms-ui output to iclms-electron serve
      run: cp -r iclms-ui/dist/* iclms-electron/serve

    - name: Install electron-builder globally
      run: yarn global add electron-builder

    - name: Install and build iclms-electron
      working-directory: iclms-electron
      run: |
        yarn install
        yarn build-${{ matrix.platform }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: iclms-electron-dist-${{ matrix.platform }}
        path: iclms/iclms-electron/dist

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download Linux build
      uses: actions/download-artifact@v3
      with:
        name: iclms-electron-dist-linux
        path: dist/linux

    - name: Download macOS build
      uses: actions/download-artifact@v3
      with:
        name: iclms-electron-dist-mac
        path: dist/mac

    - name: Download Windows build
      uses: actions/download-artifact@v3
      with:
        name: iclms-electron-dist-win
        path: dist/win

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset - Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/linux
        asset_name: iclms-electron-linux
        asset_content_type: application/zip

    - name: Upload Release Asset - macOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/mac
        asset_name: iclms-electron-mac
        asset_content_type: application/zip

    - name: Upload Release Asset - Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/win
        asset_name: iclms-electron-win
        asset_content_type: application/zip
